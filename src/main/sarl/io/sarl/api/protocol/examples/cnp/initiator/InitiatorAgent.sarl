package io.sarl.api.protocol.examples.cnp.initiator

import io.sarl.api.core.Initialize
import io.sarl.api.core.Logging
import io.sarl.api.protocol.ProtocolReady
import io.sarl.api.protocol.examples.cnp.CNPRole
import io.sarl.api.protocol.examples.cnp.enactment.ProtocolEnactment
import io.sarl.api.protocol.examples.cnp.enactment.ProtocolEnactmentSkill
import io.sarl.api.protocol.examples.cnp.events.Failure
import io.sarl.api.protocol.examples.cnp.events.Inform
import io.sarl.api.protocol.examples.cnp.events.Refuse
import io.sarl.api.protocol.examples.cnp.^space.CNPSpace
import io.sarl.lang.core.Space

agent InitiatorAgent {
	
	uses ProtocolEnactment, InitiatorProtocolCapacity, Logging
	
	var cnpSpace : Space
	
	on Initialize {
		setSkill(new ProtocolEnactmentSkill)
		setSkill(new InitiatorInnerSkill)
		cnpSpace = enact(CNPSpace, CNPRole.INITIATOR)
	}

	on ProtocolReady {
		setTask("Write paper")
	}

	on Refuse {
	}
	
	on Inform {
		info("Task completed!")
		leave(cnpSpace, CNPRole.INITIATOR)
	}

	on Failure {
		info("Too bad! :(")
		leave(cnpSpace, CNPRole.INITIATOR)
	}
	
}