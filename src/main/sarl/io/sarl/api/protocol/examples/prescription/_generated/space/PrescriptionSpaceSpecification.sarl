package io.sarl.api.protocol.examples.prescription._generated.^space

import io.bootique.di.Injector
import io.sarl.api.core.OpenEventSpace
import io.sarl.lang.core.SpaceID
import io.sarl.lang.core.SpaceSpecification
import io.sarl.sre.janus.KernelScope
import io.sarl.sre.janus.services.logging.LoggingService
import io.sarl.sre.janus.spaces.SpaceParticipantListenerFactory
import javax.inject.Inject
import javax.inject.Named

/** 
 * 
 */
class PrescriptionSpaceSpecification implements SpaceSpecification<PrescriptionSpace> {

	@Inject
	var injector : Injector
	
	@Inject
	var loggingService : LoggingService
	
	@Inject
	@KernelScope
	var spaceParticipantListenerFactory : SpaceParticipantListenerFactory
	
	@Inject
	@Named("defaultSpace")
	var defaultSpace : OpenEventSpace
	
	def create(id : SpaceID, params : Object*) : PrescriptionSpace {
		val logger = this.loggingService.getKernelLogger
		val listener = this.spaceParticipantListenerFactory.create(this.defaultSpace, logger)
		val ^space = new PrescriptionSpace(id, listener, this.loggingService)
		listener.defaultSpace = ^space
		this.injector.injectMembers(^space)
		return ^space
		
	}

}
