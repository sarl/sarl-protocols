package io.sarl.api.protocol.examples.prescription._generated.patient

import io.sarl.api.core.Logging
import io.sarl.api.protocol.examples.prescription._generated.events.Complain
import io.sarl.lang.core.EventSpace
import io.sarl.lang.core.util.MutableOptional

skill PatientProtocolSkill implements PatientProtocolCapacity {
	
	uses Logging

	val protocolSpace : EventSpace

	val symptoms : MutableOptional<String> = MutableOptional.empty
	
	new (protocolSpace : EventSpace) {
		this.protocolSpace = protocolSpace
	}
	
	def setSymptoms(symptoms : String) {
		this.symptoms.set(symptoms)
		emitIfReady
	}
	
	private def emitIfReady {
		if (this.symptoms.isPresent) {
			var evt = new Complain(this.symptoms.get)
			info("Emit COMPLAIN")
			this.protocolSpace.emit(owner.ID, evt)
			//TODO guard for emit only to specific role players
		}
	}

}
