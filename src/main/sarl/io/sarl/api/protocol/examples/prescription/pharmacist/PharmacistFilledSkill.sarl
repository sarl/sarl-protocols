package io.sarl.api.protocol.examples.prescription.pharmacist

import io.sarl.api.core.Logging
import io.sarl.api.protocol.examples.prescription.events.Filled
import io.sarl.lang.core.EventSpace
import io.sarl.lang.core.util.MutableOptional

/** 
 * parameters in id, out symptoms, in age
 * Patient -> any Doctor : Request [ in id, out symptoms, out age]
 * Doctor -> any Pharmacist : Prescribe [ in id, in symptoms, in age, out prescription]
 */
skill PharmacistFilledSkill implements PharmacistFilledCapacity {
	
	uses Logging

	val protocolSpace : EventSpace

	val pkg : MutableOptional<String> = MutableOptional.empty
	
	new (protocolSpace : EventSpace) {
		this.protocolSpace = protocolSpace
	}
	
	def setPkg(pkg : String) {
		this.pkg.set(pkg)
		emitIfReady
	}

	private def emitIfReady {
		if (this.pkg.isPresent) {
			var evt = new Filled(this.pkg.get)
			info("Emit FILLED")
			this.protocolSpace.emit(owner.ID, evt)
		}
	}
}
