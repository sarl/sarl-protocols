package io.sarl.api.protocol.examples.netbill.adapter.customer

import io.sarl.api.protocol.ProtocolCapacity
import io.sarl.api.protocol.ProtocolMessage
import io.sarl.api.protocol.examples.netbill.adapter.events.Accept
import io.sarl.api.protocol.examples.netbill.adapter.events.EPO
import io.sarl.api.protocol.examples.netbill.adapter.events.Reject
import io.sarl.api.protocol.examples.netbill.adapter.events.Request
import io.sarl.lang.core.annotation.SarlAsynchronousExecution
import java.util.List

capacity CustomerProtocolCapacity extends ProtocolCapacity {

	@SarlAsynchronousExecution
	def getEnabledRequestMessages : List<ProtocolMessage<Request>>
	@SarlAsynchronousExecution
	def getEnabledAcceptMessages : List<ProtocolMessage<Accept>>
	@SarlAsynchronousExecution
	def getEnabledRejectMessages : List<ProtocolMessage<Reject>>
	@SarlAsynchronousExecution
	def getEnabledEPOMessages : List<ProtocolMessage<EPO>>

	@SarlAsynchronousExecution
	def sendRequestMessage(m : ProtocolMessage<Request>)
	@SarlAsynchronousExecution
	def sendAcceptMessage(m : ProtocolMessage<Accept>)
	@SarlAsynchronousExecution
	def sendRejectMessage(m : ProtocolMessage<Reject>)
	@SarlAsynchronousExecution
	def sendEPOMessage(m : ProtocolMessage<EPO>)

}
