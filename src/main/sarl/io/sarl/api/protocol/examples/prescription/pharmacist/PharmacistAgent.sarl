package io.sarl.api.protocol.examples.prescription.pharmacist

import io.sarl.api.core.Initialize
import io.sarl.api.core.Lifecycle
import io.sarl.api.core.Logging
import io.sarl.api.core.SpaceCreated
import io.sarl.api.protocol.ProtocolCompleted
import io.sarl.api.protocol.ProtocolEnactment
import io.sarl.api.protocol.ProtocolEnactmentSkill
import io.sarl.api.protocol.ProtocolSpace
import io.sarl.api.protocol.examples.prescription.adapter.PrescriptionRole
import io.sarl.api.protocol.examples.prescription.adapter.events.FilledEnabled
import io.sarl.api.protocol.examples.prescription.adapter.pharmacist.PharmacistProtocolCapacity
import io.sarl.api.protocol.examples.prescription.adapter.^space.PrescriptionSpaceSpecification
import java.util.concurrent.atomic.AtomicReference

agent PharmacistAgent {
	
	uses ProtocolEnactment, PharmacistProtocolCapacity, PharmacistInnerCapacity, Logging, Lifecycle

	var prescriptionSpace = new AtomicReference<ProtocolSpace>

	on Initialize {
		loggingName = "Pharmacist"
	}
	
	on SpaceCreated [it.spaceID.spaceSpecification == PrescriptionSpaceSpecification] {
		setSkill(new ProtocolEnactmentSkill)
		setSkill(new PharmacistInnerSkill)
		var sp = enact(occurrence.spaceID, PrescriptionRole.PHARMACIST)
		prescriptionSpace.set(sp)
	}

	on FilledEnabled {
		var pkg = preparePkg(rx)
		setPkg(pkg)
	}

	on ProtocolCompleted {
		leave(prescriptionSpace.get, PrescriptionRole.PHARMACIST)
		killMe
	}
	
}
