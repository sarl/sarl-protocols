/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.bspl.api.protocol.enactment

import io.sarl.bspl.api.protocol.impl.ProtocolRole
import io.sarl.bspl.api.protocol.impl.ProtocolSpace
import io.sarl.lang.core.DefaultSkill
import io.sarl.lang.core.SpaceID
import io.sarl.lang.core.SpaceSpecification

/**
 * Capacity provided to agents for enacting to a BSPL protocol.
 *
 * @author $Author: stedeschi$
 * @author $Author: sgalland$
 * @author $Author: mbaldoni$
 * @author $Author: cbaroglio$
 * @author $Author: rmicalizio$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.15
 */
@DefaultSkill(typeof(ProtocolEnactmentSkill))
capacity ProtocolEnactment {

	/** Enact a protocol. This function is usually used by the first role player in the protocol instance.
	 *
	 * @param <S> the type of the protocol to enact.
	 * @param protocol the specification of the protocol to enact.
	 * @param role the role to be played by the agent.
	 */
	def enact(protocol : Class<? extends SpaceSpecification<S>>, role : ProtocolRole) with S extends ProtocolSpace
	
	/** Enact a protocol in a specific protocol instance. This function is usually used by agents
	 * which want to join other participants to the protocol instance.
	 *
	 * @param spaceId the identifier of the space that is supporting the protocol instance.
	 * @param role the role to be played by the agent.
	 */
	def enact(spaceId : SpaceID, role : ProtocolRole)
	
	/** Leave the role in the given protocol.
	 *
	 * @param protocol the protocol space representing the protocol instance to leave.
	 * @param role the role to be no more played by the agent.
	 */
	def leave(protocol : ProtocolSpace, role : ProtocolRole)

}
