/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2025 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
grammar io.sarl.extensions.bspl.lang.BSPL with org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations

generate bspl "http://www.sarl.io/lang/BSPL"

import "http://www.eclipse.org/xtext/common/JavaVMTypes" as jvm
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/xbase/Xtype" as xtype

ProtocolSpecification returns BsplProtocolSpecification:
	{BsplProtocolSpecification}
	('package' package=QualifiedName ';'?)?
	importSection=XImportSection?
	bsplProtocols+=Protocol*
;

Protocol returns BsplProtocol:
	{BsplProtocol}
	modifiers+=ProtocolVisibilityModifier* 'protocol'? name=ValidID '{'
		( 'role'? members+=ProtocolRole (',' members+=ProtocolRole)* )*
		( ( 'private' 'parameter'? members+=ProtocolPrivateParameter ( ',' members+=ProtocolPrivateParameter )* )
		  |
		  ( 'public' 'parameter'? members+=ProtocolPublicParameter ( ',' members+=ProtocolPublicParameter )* )
		  |
		  ( 'parameter' members+=ProtocolParameter ( ',' members+=ProtocolParameter )* )
		)*
		( members+=ProtocolMessage )*
	'}'
;

ProtocolRole returns BsplProtocolRole:
	{BsplProtocolRole}
	name=ValidID ('[' (min=INT '..')? max=INT ']')?
;

ProtocolPrivateParameter returns BsplProtocolParameter:
	{BsplProtocolPrivateParameter}
	modifiers+=ParameterModifier* name=ValidID (':' type=JvmTypeReference)? modifiers+='key'?
;

ProtocolPublicParameter returns BsplProtocolParameter:
	{BsplProtocolPublicParameter}
	modifiers+=ParameterModifier* name=ValidID (':' type=JvmTypeReference)? modifiers+='key'?
;

ProtocolParameter returns BsplProtocolParameter:
	{BsplProtocolParameter}
	modifiers+=ParameterModifier* name=ValidID (':' type=JvmTypeReference)? modifiers+='key'?
;

ProtocolMessage returns BsplProtocolMessage:
	{BsplProtocolMessage}
	from=ValidID
			'->' modifiers+=MessageTargetModifier* to=ValidID modifiers+=MessageTargetModifier*
			':' message=ValidID 
			( '[' ( arguments+=ArgumentDef (',' arguments+=ArgumentDef)* )?  ']' )?
;

ArgumentDef returns BsplProtocolArgument:
	{BsplProtocolArgument}
	modifiers+=ParameterModifier* name=ValidID modifiers+='key'?
;

ParameterModifier:
		'out' | 'in' | 'nil' | 'any' | 'opt'
;

MessageTargetModifier:
		'out' | 'in'
;

ProtocolVisibilityModifier:
		'public' | 'package'
;
 